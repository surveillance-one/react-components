import styled, { css } from "styled-components";
import { rgba, darken } from "polished";
import remy from "utils/remy";
import { defaultTheme } from "../themes";
export var globalStyles = css(["{font-size:100%;font-family:Lato,\"Segoe UI\",\"Helvetica Neue\",\"Helvetica\",Arial,sans-serif;box-sizing:border-box;}"]);
export var IconWrapper = styled.span.attrs(function (p) {
  return {
    bgColor: p.bg ? "rgba(0,0,0,.1)" : ""
  };
}).withConfig({
  displayName: "globals__IconWrapper",
  componentId: "sc-2aur0j-0"
})(["display:inline-flex;text-align:center;background-color:", " box-shadow:-1px 0 0 0 transparent inset;padding:.75em;", ""], function (p) {
  return p.bgColor;
}, function (p) {
  return p.bg ? "" : "margin: 0 !important";
});
export var IconStyle = function IconStyle(p) {
  return p.iconName && css(["align-items:center;justify-content:center;display:", ";", ";", ";", "{", ";", "}"], p.iconName ? "inline-flex" : "inline-block", p.iconPosition === "left" && "\n        padding: 0 ".concat(remy(11), " 0 0;\n        flex-flow: row-reverse;\n    "), p.iconPosition === "right" && "\n        padding: 0 0 0 ".concat(remy(11), ";\n    "), IconWrapper, p.iconPosition === "left" && "\n        border-radius: .3rem 0 0 .3rem;\n        margin: 0 ".concat(remy(11), " 0 0;\n      "), p.iconPosition === "right" && "\n        border-radius: 0 .3rem .3rem 0;\n        margin: 0 0 0 ".concat(remy(11), ";\n      "));
};
export var buttonStyle = function buttonStyle(type) {
  var color = defaultTheme.COLOR[type];
  var bgColor = defaultTheme.BG_COLOR[type];
  return css(["&{background:", ";color:", ";&:hover{color:", ";border-color:", "}", "{background-color:", ";}}"], bgColor, rgba(color, 0.9), color, darken("0.1", bgColor), IconWrapper, type === "secondary" ? "rgba(165,165,165,.1)" : "");
};
export var base = css(["&,&:link,&:visited{align-self:center;align-items:center;position:relative;display:flex;height:2.5em;max-height:3em;min-height:1em;margin:0;border:none;border:1px solid transparent;vertical-align:baseline;color:rgba(0,0,0,.6);font-style:normal;font-weight:500;text-align:center;text-decoration:none;text-shadow:none;text-transform:none;cursor:pointer;list-style:none;outline:0;transition:opacity .1s ease,background-color .1s ease,color .1s ease,box-shadow .1s ease;user-select:none;white-space:nowrap;overflow:hidden;box-shadow:0 1px 2px 0 rgba(34,36,38,.2);border-radius:.3rem;background-color:rgba(238,238,238,1);}&:hover{color:rgba(0,0,0,.8);border:solid ", " 1px;}&:active,&:focus{outline:none;}&::after{content:\"\";display:inline-block;height:100%;width:100%;border-radius:10rem;position:absolute;top:0;left:0;z-index:-1;transition:all .4s;}&:disabled{cursor:not-allowed;transition:initial;transform:initial;}"], darken("0.2", "#dbdbdb"));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdWkvc3R5bGVzL2dsb2JhbHMuanMiXSwibmFtZXMiOlsic3R5bGVkIiwiY3NzIiwicmdiYSIsImRhcmtlbiIsInJlbXkiLCJkZWZhdWx0VGhlbWUiLCJnbG9iYWxTdHlsZXMiLCJJY29uV3JhcHBlciIsInNwYW4iLCJhdHRycyIsInAiLCJiZ0NvbG9yIiwiYmciLCJJY29uU3R5bGUiLCJpY29uTmFtZSIsImljb25Qb3NpdGlvbiIsImJ1dHRvblN0eWxlIiwidHlwZSIsImNvbG9yIiwiQ09MT1IiLCJCR19DT0xPUiIsImJhc2UiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE1BQVAsSUFBaUJDLEdBQWpCLFFBQTRCLG1CQUE1QjtBQUNBLFNBQVNDLElBQVQsRUFBZUMsTUFBZixRQUE2QixVQUE3QjtBQUNBLE9BQU9DLElBQVAsTUFBaUIsWUFBakI7QUFDQSxTQUFTQyxZQUFULFFBQTZCLFdBQTdCO0FBRUEsT0FBTyxJQUFNQyxZQUFZLEdBQUdMLEdBQUgsNkhBQWxCO0FBTVAsT0FBTyxJQUFNTSxXQUFXLEdBQUdQLE1BQU0sQ0FBQ1EsSUFBUCxDQUFZQyxLQUFaLENBQWtCLFVBQUFDLENBQUM7QUFBQSxTQUFLO0FBQ2xEQyxJQUFBQSxPQUFPLEVBQUVELENBQUMsQ0FBQ0UsRUFBRixHQUFPLGdCQUFQLEdBQTBCO0FBRGUsR0FBTDtBQUFBLENBQW5CLENBQUg7QUFBQTtBQUFBO0FBQUEsK0hBS0YsVUFBQUYsQ0FBQztBQUFBLFNBQUlBLENBQUMsQ0FBQ0MsT0FBTjtBQUFBLENBTEMsRUFRcEIsVUFBQUQsQ0FBQztBQUFBLFNBQUtBLENBQUMsQ0FBQ0UsRUFBRixHQUFPLEVBQVAsR0FBWSxzQkFBakI7QUFBQSxDQVJtQixDQUFqQjtBQVdQLE9BQU8sSUFBTUMsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQUgsQ0FBQztBQUFBLFNBQUlBLENBQUMsQ0FBQ0ksUUFBRixJQUFjYixHQUFkLHVGQUdkUyxDQUFDLENBQUNJLFFBQUYsR0FBYSxhQUFiLEdBQTZCLGNBSGYsRUFLeEJKLENBQUMsQ0FBQ0ssWUFBRixLQUFtQixNQUFuQixtQ0FDZVgsSUFBSSxDQUFDLEVBQUQsQ0FEbkIsaURBTHdCLEVBU3hCTSxDQUFDLENBQUNLLFlBQUYsS0FBbUIsT0FBbkIsdUNBQ21CWCxJQUFJLENBQUMsRUFBRCxDQUR2QixZQVR3QixFQWN4QkcsV0Fkd0IsRUFldEJHLENBQUMsQ0FBQ0ssWUFBRixLQUFtQixNQUFuQiwyRUFFWVgsSUFBSSxDQUFDLEVBQUQsQ0FGaEIsa0JBZnNCLEVBbUJ0Qk0sQ0FBQyxDQUFDSyxZQUFGLEtBQW1CLE9BQW5CLCtFQUVnQlgsSUFBSSxDQUFDLEVBQUQsQ0FGcEIsY0FuQnNCLENBQUo7QUFBQSxDQUFuQjtBQTBCUCxPQUFPLElBQU1ZLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNDLElBQUQsRUFBVTtBQUNwQyxNQUFNQyxLQUFLLEdBQUdiLFlBQVksQ0FBQ2MsS0FBYixDQUFtQkYsSUFBbkIsQ0FBZDtBQUNBLE1BQU1OLE9BQU8sR0FBR04sWUFBWSxDQUFDZSxRQUFiLENBQXNCSCxJQUF0QixDQUFoQjtBQUNBLFNBQU9oQixHQUFQLHNHQUNpQlUsT0FEakIsRUFFWVQsSUFBSSxDQUFDZ0IsS0FBRCxFQUFRLEdBQVIsQ0FGaEIsRUFLY0EsS0FMZCxFQU1xQmYsTUFBTSxDQUFDLEtBQUQsRUFBUVEsT0FBUixDQU4zQixFQVFLSixXQVJMLEVBU3lCVSxJQUFJLEtBQUssV0FBVCxHQUF1QixzQkFBdkIsR0FBZ0QsRUFUekU7QUFZQSxDQWZNO0FBaUJQLE9BQU8sSUFBTUksSUFBSSxHQUFHcEIsR0FBSCwwNUJBNkNHRSxNQUFNLENBQUMsS0FBRCxFQUFRLFNBQVIsQ0E3Q1QsQ0FBViIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQsIHsgY3NzIH0gZnJvbSBcInN0eWxlZC1jb21wb25lbnRzXCI7XG5pbXBvcnQgeyByZ2JhLCBkYXJrZW4gfSBmcm9tIFwicG9saXNoZWRcIjtcbmltcG9ydCByZW15IGZyb20gXCJ1dGlscy9yZW15XCI7XG5pbXBvcnQgeyBkZWZhdWx0VGhlbWUgfSBmcm9tIFwiLi4vdGhlbWVzXCI7XG5cbmV4cG9ydCBjb25zdCBnbG9iYWxTdHlsZXMgPSBjc3Nge1xuICBmb250LXNpemU6IDEwMCU7XG4gIGZvbnQtZmFtaWx5OiBMYXRvLFwiU2Vnb2UgVUlcIixcIkhlbHZldGljYSBOZXVlXCIsXCJIZWx2ZXRpY2FcIixBcmlhbCxzYW5zLXNlcmlmO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufWA7XG5cbmV4cG9ydCBjb25zdCBJY29uV3JhcHBlciA9IHN0eWxlZC5zcGFuLmF0dHJzKHAgPT4gKHtcblx0YmdDb2xvcjogcC5iZyA/IFwicmdiYSgwLDAsMCwuMSlcIiA6IFwiXCIsXG59KSlgXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7cCA9PiBwLmJnQ29sb3J9XG4gIGJveC1zaGFkb3c6IC0xcHggMCAwIDAgdHJhbnNwYXJlbnQgaW5zZXQ7XG4gIHBhZGRpbmc6IC43NWVtO1xuICAke3AgPT4gKHAuYmcgPyBcIlwiIDogXCJtYXJnaW46IDAgIWltcG9ydGFudFwiKX1cbmA7XG5cbmV4cG9ydCBjb25zdCBJY29uU3R5bGUgPSBwID0+IHAuaWNvbk5hbWUgJiYgY3NzYFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZGlzcGxheTogJHsocC5pY29uTmFtZSA/IFwiaW5saW5lLWZsZXhcIiA6IFwiaW5saW5lLWJsb2NrXCIpfTtcblxuICAgICR7cC5pY29uUG9zaXRpb24gPT09IFwibGVmdFwiICYmIGBcbiAgICAgICAgcGFkZGluZzogMCAke3JlbXkoMTEpfSAwIDA7XG4gICAgICAgIGZsZXgtZmxvdzogcm93LXJldmVyc2U7XG4gICAgYH07XG4gICAgJHtwLmljb25Qb3NpdGlvbiA9PT0gXCJyaWdodFwiICYmIGBcbiAgICAgICAgcGFkZGluZzogMCAwIDAgJHtyZW15KDExKX07XG4gICAgYH07XG5cbiAgICAvKiogY2hhbmdlcyBpY29uV3JhcHBlciAqL1xuICAgICR7SWNvbldyYXBwZXJ9IHtcbiAgICAgICR7cC5pY29uUG9zaXRpb24gPT09IFwibGVmdFwiICYmIGBcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjNyZW0gMCAwIC4zcmVtO1xuICAgICAgICBtYXJnaW46IDAgJHtyZW15KDExKX0gMCAwO1xuICAgICAgYH07XG4gICAgICAke3AuaWNvblBvc2l0aW9uID09PSBcInJpZ2h0XCIgJiYgYFxuICAgICAgICBib3JkZXItcmFkaXVzOiAwIC4zcmVtIC4zcmVtIDA7XG4gICAgICAgIG1hcmdpbjogMCAwIDAgJHtyZW15KDExKX07XG4gICAgICBgfVxuICAgIH1cbiAgYDtcblxuZXhwb3J0IGNvbnN0IGJ1dHRvblN0eWxlID0gKHR5cGUpID0+IHtcblx0Y29uc3QgY29sb3IgPSBkZWZhdWx0VGhlbWUuQ09MT1JbdHlwZV07XG5cdGNvbnN0IGJnQ29sb3IgPSBkZWZhdWx0VGhlbWUuQkdfQ09MT1JbdHlwZV07XG5cdHJldHVybiBjc3NgJntcbiAgICBiYWNrZ3JvdW5kOiAke2JnQ29sb3J9O1xuICAgIGNvbG9yOiAke3JnYmEoY29sb3IsIDAuOSl9O1xuICAgIC8qIGJvcmRlcjogc29saWQgJHtkYXJrZW4oXCIwLjA1XCIsIGJnQ29sb3IpfSAxcHg7ICovXG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGFya2VuKFwiMC4xXCIsIGJnQ29sb3IpfVxuICAgIH1cbiAgICAke0ljb25XcmFwcGVyfSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3R5cGUgPT09IFwic2Vjb25kYXJ5XCIgPyBcInJnYmEoMTY1LDE2NSwxNjUsLjEpXCIgOiBcIlwifTtcbiAgICB9XG4gIH1gO1xufTtcblxuZXhwb3J0IGNvbnN0IGJhc2UgPSBjc3NgXG4gICYsXG4gICY6bGluayxcbiAgJjp2aXNpdGVkIHtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBcbiAgICBoZWlnaHQ6IDIuNWVtO1xuICAgIG1heC1oZWlnaHQ6IDNlbTtcbiAgICBtaW4taGVpZ2h0OjFlbTtcbiAgICBcbiAgICBtYXJnaW46MDtcblxuICAgIGJvcmRlcjpub25lO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIHZlcnRpY2FsLWFsaWduOmJhc2VsaW5lO1xuXG4gICAgY29sb3I6IHJnYmEoMCwwLDAsLjYpO1xuXG4gICAgZm9udC1zdHlsZTpub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcblxuICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgIHRleHQtc2hhZG93Om5vbmU7XG4gICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcblxuICAgIGN1cnNvcjpwb2ludGVyO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgb3V0bGluZTogMDtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4xcyBlYXNlLGJhY2tncm91bmQtY29sb3IgLjFzIGVhc2UsY29sb3IgLjFzIGVhc2UsYm94LXNoYWRvdyAuMXMgZWFzZTtcbiAgICB1c2VyLXNlbGVjdDpub25lO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgYm94LXNoYWRvdzogMCAxcHggMnB4IDAgcmdiYSgzNCwzNiwzOCwuMik7XG4gICAgYm9yZGVyLXJhZGl1czogLjNyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMzgsMjM4LDIzOCwxKTtcbiAgfVxuICBcbiAgJjpob3ZlciB7XG4gICAgY29sb3I6IHJnYmEoMCwwLDAsLjgpO1xuICAgIGJvcmRlcjogc29saWQgJHtkYXJrZW4oXCIwLjJcIiwgXCIjZGJkYmRiXCIpfSAxcHg7XG4gIH1cblxuICAmOmFjdGl2ZSxcbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLXJhZGl1czogMTByZW07XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zaXRpb246IGFsbCAuNHM7XG4gIH1cblxuICAmOmRpc2FibGVkIHtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIHRyYW5zaXRpb246IGluaXRpYWw7XG4gICAgdHJhbnNmb3JtOiBpbml0aWFsO1xuXG4gIH1cbmA7XG4iXX0=