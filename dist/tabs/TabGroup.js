import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { Children, cloneElement, useState } from "react";
import styled from "styled-components";
import PropTypes from "prop-types";
import { defaultTheme } from "../ui/themes";
import { TabsList, TabsContent, Selector, css_tabsbase, css_tabsslider } from "./styles";
/**
 * @title Tabs component
 *
 * @summary Components/Tab is a simple Tab component using Styled Components and made for reusability
 * @see StyledComponents
 *
 * @version 1.1.0
 * @author [Markus Hudobnik](https://github.com/rnarkus)
 */

var TabGroupComponent = function TabGroupComponent(_ref) {
  var children = _ref.children,
      className = _ref.className,
      active = _ref.active,
      primary = _ref.primary,
      secondary = _ref.secondary,
      rounded = _ref.rounded,
      underline = _ref.underline,
      slider = _ref.slider,
      props = _objectWithoutProperties(_ref, ["children", "className", "active", "primary", "secondary", "rounded", "underline", "slider"]);

  var _useState = useState(active),
      _useState2 = _slicedToArray(_useState, 2),
      activeTab = _useState2[0],
      setActiveTab = _useState2[1];

  var _useState3 = useState(true),
      _useState4 = _slicedToArray(_useState3, 2),
      initialRender = _useState4[0],
      setInitialRender = _useState4[1];

  var _useState5 = useState({
    width: "",
    left: ""
  }),
      _useState6 = _slicedToArray(_useState5, 2),
      activeRef = _useState6[0],
      setActiveRef = _useState6[1];

  if (initialRender) {
    setInitialRender(false);
  }

  return React.createElement("div", Object.assign({
    className: className
  }, props), React.createElement(TabsList, {
    slider: slider
  }, slider && React.createElement(Selector, {
    width: activeRef.width,
    left: activeRef.left
  }), Children.map(children, function (child, i) {
    return cloneElement(child, {
      item: i,
      onTabClick: setActiveTab,
      onSendRef: setActiveRef,
      currentTab: activeTab === i,
      primaryAll: primary,
      secondaryAll: secondary,
      roundedAll: rounded,
      underlineAll: underline,
      slider: slider,
      initialRender: initialRender
    });
  })), !slider && React.createElement(TabsContent, {
    slider: slider
  }, Children.map(children, function (child, i) {
    if (i !== activeTab) return undefined;
    return child.props.children;
  })));
};

var TabGroup = styled(TabGroupComponent).withConfig({
  displayName: "TabGroup",
  componentId: "sc-1brek3u-0"
})(["", " ", "{", "}"], css_tabsbase, TabsList, function (p) {
  return p.slider && css_tabsslider;
});
/** Default Props */

TabGroup.defaultProps = {
  children: "",
  theme: defaultTheme.base,
  active: 0,
  underline: false,
  primary: false,
  secondary: false,
  rounded: false
};
/** Prop Types */

TabGroup.propTypes = {
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),
  theme: PropTypes.object,
  active: PropTypes.number,
  underline: PropTypes.bool,
  primary: PropTypes.bool,
  secondary: PropTypes.bool,
  rounded: PropTypes.bool
};
export default TabGroup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvdGFicy9UYWJHcm91cC5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJDaGlsZHJlbiIsImNsb25lRWxlbWVudCIsInVzZVN0YXRlIiwic3R5bGVkIiwiUHJvcFR5cGVzIiwiZGVmYXVsdFRoZW1lIiwiVGFic0xpc3QiLCJUYWJzQ29udGVudCIsIlNlbGVjdG9yIiwiY3NzX3RhYnNiYXNlIiwiY3NzX3RhYnNzbGlkZXIiLCJUYWJHcm91cENvbXBvbmVudCIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiYWN0aXZlIiwicHJpbWFyeSIsInNlY29uZGFyeSIsInJvdW5kZWQiLCJ1bmRlcmxpbmUiLCJzbGlkZXIiLCJwcm9wcyIsImFjdGl2ZVRhYiIsInNldEFjdGl2ZVRhYiIsImluaXRpYWxSZW5kZXIiLCJzZXRJbml0aWFsUmVuZGVyIiwid2lkdGgiLCJsZWZ0IiwiYWN0aXZlUmVmIiwic2V0QWN0aXZlUmVmIiwibWFwIiwiY2hpbGQiLCJpIiwiaXRlbSIsIm9uVGFiQ2xpY2siLCJvblNlbmRSZWYiLCJjdXJyZW50VGFiIiwicHJpbWFyeUFsbCIsInNlY29uZGFyeUFsbCIsInJvdW5kZWRBbGwiLCJ1bmRlcmxpbmVBbGwiLCJ1bmRlZmluZWQiLCJUYWJHcm91cCIsInAiLCJkZWZhdWx0UHJvcHMiLCJ0aGVtZSIsImJhc2UiLCJwcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJhcnJheU9mIiwibm9kZSIsIm9iamVjdCIsIm51bWJlciIsImJvb2wiXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsUUFBaEIsRUFBMEJDLFlBQTFCLEVBQXdDQyxRQUF4QyxRQUF3RCxPQUF4RDtBQUNBLE9BQU9DLE1BQVAsTUFBbUIsbUJBQW5CO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUdBLFNBQVNDLFlBQVQsUUFBNkIsY0FBN0I7QUFDQSxTQUNDQyxRQURELEVBRUNDLFdBRkQsRUFHQ0MsUUFIRCxFQUlDQyxZQUpELEVBS0NDLGNB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RGE7QUFFdkJnQyxFQUFBQSxLQUFLLEVBQUV2QyxZQUFZLENBQUN3QyxJQUZHO0FBR3ZCL0IsRUFBQUEsTUFBTSxFQUFFLENBSGU7QUFJdkJJLEVBQUFBLFNBQVMsRUFBRSxLQUpZO0FBS3ZCSCxFQUFBQSxPQUFPLEVBQUUsS0FMYztBQU12QkMsRUFBQUEsU0FBUyxFQUFFLEtBTlk7QUFPdkJDLEVBQUFBLE9BQU8sRUFBRTtBQVBjLENBQXhCO0FBV0E7O0FBQ0F3QixRQUFRLENBQUNLLFNBQVQsR0FBcUI7QUFDcEJsQyxFQUFBQSxRQUFRLEVBQUVSLFNBQVMsQ0FBQzJDLFNBQVYsQ0FBb0IsQ0FDN0IzQyxTQUFTLENBQUM0QyxPQUFWLENBQWtCNUMsU0FBUyxDQUFDNkMsSUFBNUIsQ0FENkIsRUFFN0I3QyxTQUFTLENBQUM2QyxJQUZtQixDQUFwQixDQURVO0FBS3BCTCxFQUFBQSxLQUFLLEVBQUV4QyxTQUFTLENBQUM4QyxNQUxHO0FBTXBCcEMsRUFBQUEsTUFBTSxFQUFFVixTQUFTLENBQUMrQyxNQU5FO0FBT3BCakMsRUFBQUEsU0FBUyxFQUFFZCxTQUFTLENBQUNnRCxJQVBEO0FBUXBCckMsRUFBQUEsT0FBTyxFQUFFWCxTQUFTLENBQUNnRCxJQVJDO0FBU3BCcEMsRUFBQUEsU0FBUyxFQUFFWixTQUFTLENBQUNnRCxJQVREO0FBVXBCbkMsRUFBQUEsT0FBTyxFQUFFYixTQUFTLENBQUNnRDtBQVZDLENBQXJCO0FBY0EsZUFBZVgsUUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDaGlsZHJlbiwgY2xvbmVFbGVtZW50LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcblxuXG5pbXBvcnQgeyBkZWZhdWx0VGhlbWUgfSBmcm9tIFwiLi4vdWkvdGhlbWVzXCI7XG5pbXBvcnQge1xuXHRUYWJzTGlzdCxcblx0VGFic0NvbnRlbnQsXG5cdFNlbGVjdG9yLFxuXHRjc3NfdGFic2Jhc2UsXG5cdGNzc190YWJzc2xpZGVyXG59IGZyb20gXCIuL3N0eWxlc1wiO1xuXG4vKipcbiAqIEB0aXRsZSBUYWJzIGNvbXBvbmVudFxuICpcbiAqIEBzdW1tYXJ5IENvbXBvbmVudHMvVGFiIGlzIGEgc2ltcGxlIFRhYiBjb21wb25lbnQgdXNpbmcgU3R5bGVkIENvbXBvbmVudHMgYW5kIG1hZGUgZm9yIHJldXNhYmlsaXR5XG4gKiBAc2VlIFN0eWxlZENvbXBvbmVudHNcbiAqXG4gKiBAdmVyc2lvbiAxLjEuMFxuICogQGF1dGhvciBbTWFya3VzIEh1ZG9ibmlrXShodHRwczovL2dpdGh1Yi5jb20vcm5hcmt1cylcbiAqL1xuXG5jb25zdCBUYWJHcm91cENvbXBvbmVudCA9ICh7XG5cdGNoaWxkcmVuLCBjbGFzc05hbWUsIGFjdGl2ZSwgcHJpbWFyeSwgc2Vjb25kYXJ5LCByb3VuZGVkLCB1bmRlcmxpbmUsIHNsaWRlciwgLi4ucHJvcHNcbn0pID0+IHtcblx0Y29uc3QgW2FjdGl2ZVRhYiwgc2V0QWN0aXZlVGFiXSA9IHVzZVN0YXRlKGFjdGl2ZSk7XG5cdGNvbnN0IFtpbml0aWFsUmVuZGVyLCBzZXRJbml0aWFsUmVuZGVyXSA9IHVzZVN0YXRlKHRydWUpO1xuXHRjb25zdCBbYWN0aXZlUmVmLCBzZXRBY3RpdmVSZWZdID0gdXNlU3RhdGUoe1xuXHRcdHdpZHRoOiBcIlwiLFxuXHRcdGxlZnQ6IFwiXCJcblx0fSk7XG5cblx0aWYgKGluaXRpYWxSZW5kZXIpIHtcblx0XHRzZXRJbml0aWFsUmVuZGVyKGZhbHNlKTtcblx0fVxuXG5cdHJldHVybiAoXG5cdFx0PGRpdiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gey4uLnByb3BzfT5cblx0XHRcdDxUYWJzTGlzdCBzbGlkZXI9e3NsaWRlcn0+XG5cdFx0XHRcdHtzbGlkZXIgJiYgPFNlbGVjdG9yIHdpZHRoPXthY3RpdmVSZWYud2lkdGh9IGxlZnQ9e2FjdGl2ZVJlZi5sZWZ0fT48L1NlbGVjdG9yPn1cblx0XHRcdFx0e0NoaWxkcmVuLm1hcChjaGlsZHJlbiwgKGNoaWxkLCBpKSA9PiBjbG9uZUVsZW1lbnQoY2hpbGQsIHtcblx0XHRcdFx0XHRpdGVtOiBpLFxuXHRcdFx0XHRcdG9uVGFiQ2xpY2s6IHNldEFjdGl2ZVRhYixcblx0XHRcdFx0XHRvblNlbmRSZWY6IHNldEFjdGl2ZVJlZixcblx0XHRcdFx0XHRjdXJyZW50VGFiOiAoYWN0aXZlVGFiID09PSBpKSxcblx0XHRcdFx0XHRwcmltYXJ5QWxsOiBwcmltYXJ5LFxuXHRcdFx0XHRcdHNlY29uZGFyeUFsbDogc2Vjb25kYXJ5LFxuXHRcdFx0XHRcdHJvdW5kZWRBbGw6IHJvdW5kZWQsXG5cdFx0XHRcdFx0dW5kZXJsaW5lQWxsOiB1bmRlcmxpbmUsXG5cdFx0XHRcdFx0c2xpZGVyLFxuXHRcdFx0XHRcdGluaXRpYWxSZW5kZXJcblx0XHRcdFx0fSkpfVxuXHRcdFx0PC9UYWJzTGlzdD5cblx0XHRcdHshc2xpZGVyICYmIDxUYWJzQ29udGVudCBzbGlkZXI9e3NsaWRlcn0+XG5cdFx0XHRcdHtDaGlsZHJlbi5tYXAoY2hpbGRyZW4sIChjaGlsZCwgaSkgPT4ge1xuXHRcdFx0XHRcdGlmIChpICE9PSBhY3RpdmVUYWIpIHJldHVybiB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0cmV0dXJuIGNoaWxkLnByb3BzLmNoaWxkcmVuO1xuXHRcdFx0XHR9KX1cblx0XHRcdDwvVGFic0NvbnRlbnQ+fVxuXHRcdDwvZGl2PlxuXHQpO1xufTtcblxuY29uc3QgVGFiR3JvdXAgPSBzdHlsZWQoVGFiR3JvdXBDb21wb25lbnQpYFxuXHQke2Nzc190YWJzYmFzZX1cblxuXHQke1RhYnNMaXN0fSB7XG5cdFx0JHtwID0+IHAuc2xpZGVyICYmIGNzc190YWJzc2xpZGVyfVxuXHR9XG5gO1xuXG4vKiogRGVmYXVsdCBQcm9wcyAqL1xuVGFiR3JvdXAuZGVmYXVsdFByb3BzID0ge1xuXHRjaGlsZHJlbjogXCJcIixcblx0dGhlbWU6IGRlZmF1bHRUaGVtZS5iYXNlLFxuXHRhY3RpdmU6IDAsXG5cdHVuZGVybGluZTogZmFsc2UsXG5cdHByaW1hcnk6IGZhbHNlLFxuXHRzZWNvbmRhcnk6IGZhbHNlLFxuXHRyb3VuZGVkOiBmYWxzZSxcbn07XG5cblxuLyoqIFByb3AgVHlwZXMgKi9cblRhYkdyb3VwLnByb3BUeXBlcyA9IHtcblx0Y2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuXHRcdFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5ub2RlKSxcblx0XHRQcm9wVHlwZXMubm9kZVxuXHRdKSxcblx0dGhlbWU6IFByb3BUeXBlcy5vYmplY3QsXG5cdGFjdGl2ZTogUHJvcFR5cGVzLm51bWJlcixcblx0dW5kZXJsaW5lOiBQcm9wVHlwZXMuYm9vbCxcblx0cHJpbWFyeTogUHJvcFR5cGVzLmJvb2wsXG5cdHNlY29uZGFyeTogUHJvcFR5cGVzLmJvb2wsXG5cdHJvdW5kZWQ6IFByb3BUeXBlcy5ib29sLFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBUYWJHcm91cDtcbiJdfQ==