import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import React, { Children, cloneElement, useState } from "react";
import styled from "styled-components";
import PropTypes from "prop-types";
import { defaultTheme } from "../ui/themes";
import { TabsList, TabsContent, Selector, css_tabsbase, css_tabsslider } from "./styles";
/**
 * @title Tabs component
 *
 * @summary Components/Tab is a simple Tab component using Styled Components and made for reusability
 * @see StyledComponents
 *
 * @version 1.1.0
 * @author [Markus Hudobnik](https://github.com/rnarkus)
 */

var TabGroupComponent = function TabGroupComponent(_ref) {
  var children = _ref.children,
      className = _ref.className,
      active = _ref.active,
      primary = _ref.primary,
      secondary = _ref.secondary,
      rounded = _ref.rounded,
      underline = _ref.underline,
      slider = _ref.slider,
      props = _objectWithoutProperties(_ref, ["children", "className", "active", "primary", "secondary", "rounded", "underline", "slider"]);

  var _useState = useState(active),
      _useState2 = _slicedToArray(_useState, 2),
      activeTab = _useState2[0],
      setActiveTab = _useState2[1];

  var _useState3 = useState(),
      _useState4 = _slicedToArray(_useState3, 2),
      activeWidth = _useState4[0],
      setActiveWidth = _useState4[1];

  var _useState5 = useState(),
      _useState6 = _slicedToArray(_useState5, 2),
      activeLeft = _useState6[0],
      setActiveLeft = _useState6[1];

  return React.createElement("div", Object.assign({
    className: className
  }, props), React.createElement(TabsList, {
    slider: slider
  }, slider && React.createElement(Selector, {
    width: activeWidth,
    left: activeLeft
  }), Children.map(children, function (child, i) {
    return cloneElement(child, {
      item: i,
      onTabClick: setActiveTab,
      onSendWidth: setActiveWidth,
      onSendLeft: setActiveLeft,
      currentTab: activeTab === i,
      primaryAll: primary,
      secondaryAll: secondary,
      roundedAll: rounded,
      underlineAll: underline,
      slider: slider
    });
  })), !slider && React.createElement(TabsContent, {
    slider: slider
  }, Children.map(children, function (child, i) {
    if (i !== activeTab) return undefined;
    return child.props.children;
  })));
};

var TabGroup = styled(TabGroupComponent).withConfig({
  displayName: "TabGroup",
  componentId: "sc-1a6ofq9-0"
})(["", " ", "{", "}"], css_tabsbase, TabsList, function (p) {
  return p.slider && css_tabsslider;
});
/** Default Props */

TabGroup.defaultProps = {
  children: "",
  theme: defaultTheme.base,
  active: 0,
  underline: false,
  primary: false,
  secondary: false,
  rounded: false
};
/** Prop Types */

TabGroup.propTypes = {
  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),
  theme: PropTypes.object,
  active: PropTypes.number,
  underline: PropTypes.bool,
  primary: PropTypes.bool,
  secondary: PropTypes.bool,
  rounded: PropTypes.bool
};
export default TabGroup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvdGFicy9UYWJHcm91cC5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJDaGlsZHJlbiIsImNsb25lRWxlbWVudCIsInVzZVN0YXRlIiwic3R5bGVkIiwiUHJvcFR5cGVzIiwiZGVmYXVsdFRoZW1lIiwiVGFic0xpc3QiLCJUYWJzQ29udGVudCIsIlNlbGVjdG9yIiwiY3NzX3RhYnNiYXNlIiwiY3NzX3RhYnNzbGlkZXIiLCJUYWJHcm91cENvbXBvbmVudCIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiYWN0aXZlIiwicHJpbWFyeSIsInNlY29uZGFyeSIsInJvdW5kZWQiLCJ1bmRlcmxpbmUiLCJzbGlkZXIiLCJwcm9wcyIsImFjdGl2ZVRhYiIsInNldEFjdGl2ZVRhYiIsImFjdGl2ZVdpZHRoIiwic2V0QWN0aXZlV2lkdGgiLCJhY3RpdmVMZWZ0Iiwic2V0QWN0aXZlTGVmdCIsIm1hcCIsImNoaWxkIiwiaSIsIml0ZW0iLCJvblRhYkNsaWNrIiwib25TZW5kV2lkdGgiLCJvblNlbmRMZWZ0IiwiY3VycmVudFRhYiIsInByaW1hcnlBbGwiLCJzZWNvbmRhcnlBbGwiLCJyb3VuZGVkQWxsIiwidW5kZXJsaW5lQWxsIiwidW5kZWZpbmVkIiwiVGFiR3JvdXAiLCJwIiwiZGVmYXVsdFByb3BzIiwidGhlbWUiLCJiYXNlIiwicHJvcFR5cGVzIiwib25lT2ZUeXBlIiwiYXJyYXlPZiIsIm5vZGUiLCJvYmplY3QiLCJudW1iZXIiLCJib29sIl0sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLFFBQWhCLEVBQTBCQyxZQUExQixFQUF3Q0MsUUFBeEMsUUFBd0QsT0FBeEQ7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLG1CQUFuQjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFFQSxTQUFTQyxZQUFULFFBQTZCLGNBQTdCO0FBQ0EsU0FDQ0MsUUFERCxFQUVDQyxXQUZELEVBR0NDLFFBSEQsRUFJQ0MsWUFKRCxFQUtDQyxjQUxE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LE9BQU8sRUFBRTtBQVBjLENBQXhCO0FBV0E7O0FBQ0F1QixRQUFRLENBQUNLLFNBQVQsR0FBcUI7QUFDcEJqQyxFQUFBQSxRQUFRLEVBQUVSLFNBQVMsQ0FBQzBDLFNBQVYsQ0FBb0IsQ0FDN0IxQyxTQUFTLENBQUMyQyxPQUFWLENBQWtCM0MsU0FBUyxDQUFDNEMsSUFBNUIsQ0FENkIsRUFFN0I1QyxTQUFTLENBQUM0QyxJQUZtQixDQUFwQixDQURVO0FBS3BCTCxFQUFBQSxLQUFLLEVBQUV2QyxTQUFTLENBQUM2QyxNQUxHO0FBTXBCbkMsRUFBQUEsTUFBTSxFQUFFVixTQUFTLENBQUM4QyxNQU5FO0FBT3BCaEMsRUFBQUEsU0FBUyxFQUFFZCxTQUFTLENBQUMrQyxJQVBEO0FBUXBCcEMsRUFBQUEsT0FBTyxFQUFFWCxTQUFTLENBQUMrQyxJQVJDO0FBU3BCbkMsRUFBQUEsU0FBUyxFQUFFWixTQUFTLENBQUMrQyxJQVREO0FBVXBCbEMsRUFBQUEsT0FBTyxFQUFFYixTQUFTLENBQUMrQztBQVZDLENBQXJCO0FBY0EsZUFBZVgsUUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDaGlsZHJlbiwgY2xvbmVFbGVtZW50LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwic3R5bGVkLWNvbXBvbmVudHNcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcblxuaW1wb3J0IHsgZGVmYXVsdFRoZW1lIH0gZnJvbSBcIi4uL3VpL3RoZW1lc1wiO1xuaW1wb3J0IHtcblx0VGFic0xpc3QsXG5cdFRhYnNDb250ZW50LFxuXHRTZWxlY3Rvcixcblx0Y3NzX3RhYnNiYXNlLFxuXHRjc3NfdGFic3NsaWRlclxufSBmcm9tIFwiLi9zdHlsZXNcIjtcblxuLyoqXG4gKiBAdGl0bGUgVGFicyBjb21wb25lbnRcbiAqXG4gKiBAc3VtbWFyeSBDb21wb25lbnRzL1RhYiBpcyBhIHNpbXBsZSBUYWIgY29tcG9uZW50IHVzaW5nIFN0eWxlZCBDb21wb25lbnRzIGFuZCBtYWRlIGZvciByZXVzYWJpbGl0eVxuICogQHNlZSBTdHlsZWRDb21wb25lbnRzXG4gKlxuICogQHZlcnNpb24gMS4xLjBcbiAqIEBhdXRob3IgW01hcmt1cyBIdWRvYm5pa10oaHR0cHM6Ly9naXRodWIuY29tL3JuYXJrdXMpXG4gKi9cblxuY29uc3QgVGFiR3JvdXBDb21wb25lbnQgPSAoe1xuXHRjaGlsZHJlbiwgY2xhc3NOYW1lLCBhY3RpdmUsIHByaW1hcnksIHNlY29uZGFyeSwgcm91bmRlZCwgdW5kZXJsaW5lLCBzbGlkZXIsIC4uLnByb3BzXG59KSA9PiB7XG5cdGNvbnN0IFthY3RpdmVUYWIsIHNldEFjdGl2ZVRhYl0gPSB1c2VTdGF0ZShhY3RpdmUpO1xuXHRjb25zdCBbYWN0aXZlV2lkdGgsIHNldEFjdGl2ZVdpZHRoXSA9IHVzZVN0YXRlKCk7XG5cdGNvbnN0IFthY3RpdmVMZWZ0LCBzZXRBY3RpdmVMZWZ0XSA9IHVzZVN0YXRlKCk7XG5cblx0cmV0dXJuIChcblx0XHQ8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSB7Li4ucHJvcHN9PlxuXHRcdFx0PFRhYnNMaXN0IHNsaWRlcj17c2xpZGVyfT5cblx0XHRcdFx0e3NsaWRlciAmJiA8U2VsZWN0b3Igd2lkdGg9e2FjdGl2ZVdpZHRofSBsZWZ0PXthY3RpdmVMZWZ0fT48L1NlbGVjdG9yPn1cblx0XHRcdFx0e0NoaWxkcmVuLm1hcChjaGlsZHJlbiwgKGNoaWxkLCBpKSA9PiBjbG9uZUVsZW1lbnQoY2hpbGQsIHtcblx0XHRcdFx0XHRpdGVtOiBpLFxuXHRcdFx0XHRcdG9uVGFiQ2xpY2s6IHNldEFjdGl2ZVRhYixcblx0XHRcdFx0XHRvblNlbmRXaWR0aDogc2V0QWN0aXZlV2lkdGgsXG5cdFx0XHRcdFx0b25TZW5kTGVmdDogc2V0QWN0aXZlTGVmdCxcblx0XHRcdFx0XHRjdXJyZW50VGFiOiAoYWN0aXZlVGFiID09PSBpKSxcblx0XHRcdFx0XHRwcmltYXJ5QWxsOiBwcmltYXJ5LFxuXHRcdFx0XHRcdHNlY29uZGFyeUFsbDogc2Vjb25kYXJ5LFxuXHRcdFx0XHRcdHJvdW5kZWRBbGw6IHJvdW5kZWQsXG5cdFx0XHRcdFx0dW5kZXJsaW5lQWxsOiB1bmRlcmxpbmUsXG5cdFx0XHRcdFx0c2xpZGVyXG5cdFx0XHRcdH0pKX1cblx0XHRcdDwvVGFic0xpc3Q+XG5cdFx0XHR7IXNsaWRlciAmJiA8VGFic0NvbnRlbnQgc2xpZGVyPXtzbGlkZXJ9PlxuXHRcdFx0XHR7Q2hpbGRyZW4ubWFwKGNoaWxkcmVuLCAoY2hpbGQsIGkpID0+IHtcblx0XHRcdFx0XHRpZiAoaSAhPT0gYWN0aXZlVGFiKSByZXR1cm4gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdHJldHVybiBjaGlsZC5wcm9wcy5jaGlsZHJlbjtcblx0XHRcdFx0fSl9XG5cdFx0XHQ8L1RhYnNDb250ZW50Pn1cblx0XHQ8L2Rpdj5cblx0KTtcbn07XG5cbmNvbnN0IFRhYkdyb3VwID0gc3R5bGVkKFRhYkdyb3VwQ29tcG9uZW50KWBcblx0JHtjc3NfdGFic2Jhc2V9XG5cblx0JHtUYWJzTGlzdH0ge1xuXHRcdCR7cCA9PiBwLnNsaWRlciAmJiBjc3NfdGFic3NsaWRlcn1cblx0fVxuYDtcblxuLyoqIERlZmF1bHQgUHJvcHMgKi9cblRhYkdyb3VwLmRlZmF1bHRQcm9wcyA9IHtcblx0Y2hpbGRyZW46IFwiXCIsXG5cdHRoZW1lOiBkZWZhdWx0VGhlbWUuYmFzZSxcblx0YWN0aXZlOiAwLFxuXHR1bmRlcmxpbmU6IGZhbHNlLFxuXHRwcmltYXJ5OiBmYWxzZSxcblx0c2Vjb25kYXJ5OiBmYWxzZSxcblx0cm91bmRlZDogZmFsc2UsXG59O1xuXG5cbi8qKiBQcm9wIFR5cGVzICovXG5UYWJHcm91cC5wcm9wVHlwZXMgPSB7XG5cdGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcblx0XHRQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMubm9kZSksXG5cdFx0UHJvcFR5cGVzLm5vZGVcblx0XSksXG5cdHRoZW1lOiBQcm9wVHlwZXMub2JqZWN0LFxuXHRhY3RpdmU6IFByb3BUeXBlcy5udW1iZXIsXG5cdHVuZGVybGluZTogUHJvcFR5cGVzLmJvb2wsXG5cdHByaW1hcnk6IFByb3BUeXBlcy5ib29sLFxuXHRzZWNvbmRhcnk6IFByb3BUeXBlcy5ib29sLFxuXHRyb3VuZGVkOiBQcm9wVHlwZXMuYm9vbCxcbn07XG5cblxuZXhwb3J0IGRlZmF1bHQgVGFiR3JvdXA7XG4iXX0=