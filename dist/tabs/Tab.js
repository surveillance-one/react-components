import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

/* eslint-disable one-var-declaration-per-line */
import React, { useCallback, useRef, useLayoutEffect } from "react";
import styled, { css } from "styled-components";
import PropTypes from "prop-types";
import { Icon } from "../icon"; // version 1.1

import { TabLabel, IconWrapper, css_tabbase, css_tabcurrentunderline, css_tabcurrent, css_tabicons, css_showicononlyonactive, css_tabrounded, css_slider, tabStyle } from "./styles";

var TabComponent = function TabComponent(_ref) {
  var label = _ref.label,
      className = _ref.className,
      onTabClick = _ref.onTabClick,
      onSendWidth = _ref.onSendWidth,
      onSendLeft = _ref.onSendLeft,
      item = _ref.item,
      props = _objectWithoutProperties(_ref, ["label", "className", "onTabClick", "onSendWidth", "onSendLeft", "item"]);

  var ref = useRef(null);
  useLayoutEffect(function () {
    if (item === 0) {
      onSendWidth(ref.current.getBoundingClientRect().width);
      onSendLeft(ref.current.offsetLeft);
    }
  }, [item, onSendWidth, onSendLeft]);
  return React.createElement("li", {
    className: className,
    onClick: useCallback(function () {
      onTabClick(item);
      onSendWidth(ref.current.getBoundingClientRect().width);
      onSendLeft(ref.current.offsetLeft);
    }, [onTabClick, item, onSendLeft, onSendWidth]),
    key: item,
    current: props.currentTab.toString(),
    tabIndex: item,
    ref: ref
  }, React.createElement(TabLabel, null, label), props.iconName && React.createElement(IconWrapper, null, React.createElement(Icon, {
    icon: props.iconName
  })));
};

var Tab = styled(TabComponent).withConfig({
  displayName: "Tab",
  componentId: "j3tm8k-0"
})(["", " ", ";", ";", ";", " ", " ", " ", ";"], css_tabbase, function (p) {
  return p.currentTab && (p.underlineAll || p.underline) && css_tabcurrentunderline;
}, function (p) {
  return p.currentTab && !p.underlineAll && !p.underline && css_tabcurrent;
}, function (p) {
  return p.iconName && css_tabicons;
}, function (p) {
  return p.showIconOnlyOnActive && !p.currentTab && css_showicononlyonactive;
}, function (p) {
  return !p.underlineAll && !p.underline && css(["", " ", ""], function (p) {
    return (p.secondaryAll || p.secondary) && tabStyle("secondary");
  }, function (p) {
    return (p.primaryAll || p.primary) && tabStyle("primary");
  });
}, function (p) {
  return (p.roundedAll || p.rounded) && css_tabrounded;
}, function (p) {
  return p.slider && css_slider;
});
/** Default Props */

Tab.defaultProps = {
  label: "Tab",
  iconName: "",
  iconPosition: "right",
  secondary: false,
  primary: false,
  rounded: false,
  underline: false,
  showIconOnlyOnActive: false
};
/** Prop Types */

Tab.propTypes = {
  label: PropTypes.string.isRequired,
  iconName: PropTypes.string,
  iconPosition: PropTypes.string,
  secondary: PropTypes.bool,
  primary: PropTypes.bool,
  rounded: PropTypes.bool,
  underline: PropTypes.bool,
  showIconOnlyOnActive: PropTypes.bool
};
export default Tab;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,