import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

/* eslint-disable one-var-declaration-per-line */
import React, { useRef, useLayoutEffect } from "react";
import styled, { css } from "styled-components";
import PropTypes from "prop-types";
import { Icon } from "../icon";
import useRefWidth from "../hooks/useRefWidth";
import useCallbackTab from "../hooks/useCallbackTab"; // version 1.1

import { TabLabel, IconWrapper, css_tabbase, css_tabcurrentunderline, css_tabcurrent, css_tabicons, css_showicononlyonactive, css_tabrounded, css_slider, tabStyle } from "./styles";

var TabComponent = function TabComponent(_ref) {
  var label = _ref.label,
      className = _ref.className,
      onTabClick = _ref.onTabClick,
      onSendRef = _ref.onSendRef,
      item = _ref.item,
      slider = _ref.slider,
      onClick = _ref.onClick,
      props = _objectWithoutProperties(_ref, ["label", "className", "onTabClick", "onSendRef", "item", "slider", "onClick"]);

  var ref = useRef(null);
  useRefWidth(item, onSendRef, ref, slider, props.currentTab);
  /* Fires Event if there is a onClick attached to the tab */

  useLayoutEffect(function (event) {
    console.log("HERE");
    if (props.currentTab) onClick(event);
  }, []);
  var cb = useCallbackTab(item, onSendRef, onTabClick, ref, onClick, slider);
  return React.createElement("li", {
    className: className,
    onClick: cb,
    key: item,
    current: props.currentTab.toString(),
    tabIndex: item,
    ref: ref
  }, React.createElement(TabLabel, null, label), props.iconName && React.createElement(IconWrapper, null, React.createElement(Icon, {
    icon: props.iconName
  })));
};

var Tab = styled(TabComponent).withConfig({
  displayName: "Tab",
  componentId: "sc-1ohi2-0"
})(["", " ", ";", ";", ";", " ", " ", " ", ";"], css_tabbase, function (p) {
  return p.currentTab && (p.underlineAll || p.underline) && css_tabcurrentunderline;
}, function (p) {
  return p.currentTab && !p.underlineAll && !p.underline && !p.slider && css_tabcurrent;
}, function (p) {
  return p.iconName && css_tabicons;
}, function (p) {
  return p.showIconOnlyOnActive && !p.currentTab && css_showicononlyonactive;
}, function (p) {
  return !p.underlineAll && !p.underline && css(["", " ", ""], (p.secondaryAll || p.secondary) && tabStyle("secondary"), (p.primaryAll || p.primary) && tabStyle("primary"));
}, function (p) {
  return (p.roundedAll || p.rounded) && css_tabrounded;
}, function (p) {
  return p.slider && css_slider;
});
/** Default Props */

Tab.defaultProps = {
  label: "Tab",
  iconName: "",
  iconPosition: "right",
  secondary: false,
  primary: false,
  rounded: false,
  underline: false,
  showIconOnlyOnActive: false,
  slider: false,
  onSendRef: function onSendRef() {},
  onClick: function onClick() {},
  onTabClick: function onTabClick() {}
};
/** Prop Types */

Tab.propTypes = {
  label: PropTypes.string.isRequired,
  iconName: PropTypes.string,
  iconPosition: PropTypes.string,
  secondary: PropTypes.bool,
  primary: PropTypes.bool,
  rounded: PropTypes.bool,
  underline: PropTypes.bool,
  showIconOnlyOnActive: PropTypes.bool,
  slider: PropTypes.bool,
  onSendRef: PropTypes.func,
  onClick: PropTypes.func,
  onTabClick: PropTypes.func
};
export default Tab;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,