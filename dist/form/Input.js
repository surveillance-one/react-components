import React, { useState, useEffect } from "react";
import "react-day-picker/lib/style.css";
import { IconWrapper } from "../ui/styles/globals";
import { Icon } from "../icon";
import { InputContainer, InputWrapper, InputCheckbox, HiddenInputCheckbox, CheckboxContainer } from "./styles";

var Input = function Input(_ref) {
  var _ref$type = _ref.type,
      type = _ref$type === void 0 ? "text" : _ref$type,
      placeholder = _ref.placeholder,
      iconName = _ref.iconName,
      iconBg = _ref.iconBg,
      _ref$iconPosition = _ref.iconPosition,
      iconPosition = _ref$iconPosition === void 0 ? "left" : _ref$iconPosition,
      fullWidth = _ref.fullWidth,
      handleChange = _ref.handleChange,
      val = _ref.val,
      checked = _ref.checked;
  return React.createElement(InputWrapper, {
    match: true,
    placeholder: placeholder,
    iconName: iconName,
    iconPosition: iconPosition,
    fullWidth: fullWidth
  }, type != "checkbox" && React.createElement(InputContainer, {
    placeholder: placeholder,
    value: val,
    onChange: handleChange
  }), type == "checkbox" && React.createElement(CheckboxContainer, null, React.createElement(HiddenInputCheckbox, {
    checked: checked,
    onChange: handleChange
  }), React.createElement(InputCheckbox, {
    checked: checked
  })), iconName && React.createElement(IconWrapper, {
    bg: iconBg,
    iconPosition: iconPosition
  }, React.createElement(Icon, {
    icon: iconName
  })));
};

export default Input;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvZm9ybS9JbnB1dC5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIkljb25XcmFwcGVyIiwiSWNvbiIsIklucHV0Q29udGFpbmVyIiwiSW5wdXRXcmFwcGVyIiwiSW5wdXRDaGVja2JveCIsIkhpZGRlbklucHV0Q2hlY2tib3giLCJDaGVja2JveENvbnRhaW5lciIsIklucHV0IiwidHlwZSIsInBsYWNlaG9sZGVyIiwiaWNvbk5hbWUiLCJpY29uQmciLCJpY29uUG9zaXRpb24iLCJmdWxsV2lkdGgiLCJoYW5kbGVDaGFuZ2UiLCJ2YWwiLCJjaGVja2VkIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxLQUFQLElBQWdCQyxRQUFoQixFQUEwQkMsU0FBMUIsUUFBMkMsT0FBM0M7QUFFQSxPQUFPLGdDQUFQO0FBRUEsU0FBU0MsV0FBVCxRQUE0QixzQkFBNUI7QUFFQSxTQUFTQyxJQUFULFFBQXFCLFNBQXJCO0FBRUEsU0FDQ0MsY0FERCxFQUNpQkMsWUFEakIsRUFDK0JDLGFBRC9CLEVBQzhDQyxtQkFEOUMsRUFDbUVDLGlCQURuRSxRQUVPLFVBRlA7O0FBSUEsSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSx1QkFDYkMsSUFEYTtBQUFBLE1BQ2JBLElBRGEsMEJBQ04sTUFETTtBQUFBLE1BQ0VDLFdBREYsUUFDRUEsV0FERjtBQUFBLE1BQ2VDLFFBRGYsUUFDZUEsUUFEZjtBQUFBLE1BQ3lCQyxNQUR6QixRQUN5QkEsTUFEekI7QUFBQSwrQkFDaUNDLFlBRGpDO0FBQUEsTUFDaUNBLFlBRGpDLGtDQUNnRCxNQURoRDtBQUFBLE1BQ3dEQyxTQUR4RCxRQUN3REEsU0FEeEQ7QUFBQSxNQUNtRUMsWUFEbkUsUUFDbUVBLFlBRG5FO0FBQUEsTUFDaUZDLEdBRGpGLFFBQ2lGQSxHQURqRjtBQUFBLE1BQ3NGQyxPQUR0RixRQUNzRkEsT0FEdEY7QUFBQSxTQUdiLG9CQUFDLFlBQUQ7QUFDQyxJQUFBLEtBQUssRUFBRSxJQURSO0FBRUMsSUFBQSxXQUFXLEVBQUVQLFdBRmQ7QUFHQyxJQUFBLFFBQVEsRUFBRUMsUUFIWDtBQUlDLElBQUEsWUFBWSxFQUFFRSxZQUpmO0FBS0MsSUFBQSxTQUFTLEVBQUVDO0FBTFosS0FNRUwsSUFBSSxJQUFJLFVBQVIsSUFBc0Isb0JBQUMsY0FBRDtBQUN0QixJQUFBLFdBQVcsRUFBRUMsV0FEUztBQUV0QixJQUFBLEtBQUssRUFBRU0sR0FGZTtBQUd0QixJQUFBLFFBQVEsRUFBRUQ7QUFIWSxJQU54QixFQVVFTixJQUFJLElBQUksVUFBUixJQUNELG9CQUFDLGlCQUFELFFBQ0Msb0JBQUMsbUJBQUQ7QUFBcUIsSUFBQSxPQUFPLEVBQUVRLE9BQTlCO0FBQXVDLElBQUEsUUFBUSxFQUFFRjtBQUFqRCxJQURELEVBRUMsb0JBQUMsYUFBRDtBQUFlLElBQUEsT0FBTyxFQUFFRTtBQUF4QixJQUZELENBWEQsRUFnQkVOLFFBQVEsSUFDVCxvQkFBQyxXQUFEO0FBQ0MsSUFBQSxFQUFFLEVBQUVDLE1BREw7QUFFQyxJQUFBLFlBQVksRUFBRUM7QUFGZixLQUdDLG9CQUFDLElBQUQ7QUFBTSxJQUFBLElBQUksRUFBRUY7QUFBWixJQUhELENBakJELENBSGE7QUFBQSxDQUFkOztBQWlDQSxlQUFlSCxLQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBcInJlYWN0LWRheS1waWNrZXIvbGliL3N0eWxlLmNzc1wiO1xuXG5pbXBvcnQgeyBJY29uV3JhcHBlciB9IGZyb20gXCIuLi91aS9zdHlsZXMvZ2xvYmFsc1wiO1xuXG5pbXBvcnQgeyBJY29uIH0gZnJvbSBcIi4uL2ljb25cIjtcblxuaW1wb3J0IHtcblx0SW5wdXRDb250YWluZXIsIElucHV0V3JhcHBlciwgSW5wdXRDaGVja2JveCwgSGlkZGVuSW5wdXRDaGVja2JveCwgQ2hlY2tib3hDb250YWluZXJcbn0gZnJvbSBcIi4vc3R5bGVzXCI7XG5cbmNvbnN0IElucHV0ID0gKHtcblx0dHlwZSA9IFwidGV4dFwiLCBwbGFjZWhvbGRlciwgaWNvbk5hbWUsIGljb25CZywgaWNvblBvc2l0aW9uID0gXCJsZWZ0XCIsIGZ1bGxXaWR0aCwgaGFuZGxlQ2hhbmdlLCB2YWwsIGNoZWNrZWRcbn0pID0+IChcblx0PElucHV0V3JhcHBlclxuXHRcdG1hdGNoPXt0cnVlfVxuXHRcdHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cblx0XHRpY29uTmFtZT17aWNvbk5hbWV9XG5cdFx0aWNvblBvc2l0aW9uPXtpY29uUG9zaXRpb259XG5cdFx0ZnVsbFdpZHRoPXtmdWxsV2lkdGh9PlxuXHRcdHt0eXBlICE9IFwiY2hlY2tib3hcIiAmJiA8SW5wdXRDb250YWluZXJcblx0XHRcdHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cblx0XHRcdHZhbHVlPXt2YWx9XG5cdFx0XHRvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfS8+fVxuXHRcdHt0eXBlID09IFwiY2hlY2tib3hcIiAmJlxuXHRcdDxDaGVja2JveENvbnRhaW5lcj5cblx0XHRcdDxIaWRkZW5JbnB1dENoZWNrYm94IGNoZWNrZWQ9e2NoZWNrZWR9IG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9Lz5cblx0XHRcdDxJbnB1dENoZWNrYm94IGNoZWNrZWQ9e2NoZWNrZWR9Lz5cblx0XHQ8L0NoZWNrYm94Q29udGFpbmVyPlxuXHRcdH1cblx0XHR7aWNvbk5hbWUgJiZcblx0XHQ8SWNvbldyYXBwZXJcblx0XHRcdGJnPXtpY29uQmd9XG5cdFx0XHRpY29uUG9zaXRpb249e2ljb25Qb3NpdGlvbn0+XG5cdFx0XHQ8SWNvbiBpY29uPXtpY29uTmFtZX0vPlxuXHRcdDwvSWNvbldyYXBwZXI+fVxuXHQ8L0lucHV0V3JhcHBlcj5cbik7XG5cbklucHV0LnByb3BUeXBlcyA9IHtcblx0dHlwZTogUHJvcFR5cGVzLnN0cmluZyxcblx0cGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbnB1dDtcbiJdfQ==