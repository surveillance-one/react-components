import React from "react";
import styled from "styled-components";
import PropTypes from "prop-types";
import { BtnLabel, IconWrapper, css_buttonbase, css_buttoncircle, css_buttonicons, css_buttonrounded, css_buttonsquared, css_buttonanimations, buttonStyle } from "./styles";
import { defaultTheme } from "../ui/themes";
import { Icon } from "../icon";
/**
 * @title Button component
 *
 * @summary Components/Button is a simple button component using Styled Components and made for reusability
 * @see StyledComponents
 *
 * @version 1.0.0
 * @author [SurveillanceOne][Markus Hudobnik](https://github.com/SurveillanceOne)
 */

/**
	* Component Declaration
	* - Default Props
	* - themes
 */

var ButtonComponent = function ButtonComponent(_ref) {
  var className = _ref.className,
      children = _ref.children,
      onClick = _ref.onClick,
      disabled = _ref.disabled,
      iconName = _ref.iconName,
      squared = _ref.squared,
      rounded = _ref.rounded,
      circle = _ref.circle,
      iconPosition = _ref.iconPosition;
  return React.createElement("button", {
    className: className,
    onClick: onClick,
    disabled: disabled
  }, !squared && !circle && React.createElement(BtnLabel, null, children), iconName && React.createElement(IconWrapper, {
    iconPosition: iconPosition,
    squared: squared,
    circle: circle,
    rounded: rounded
  }, React.createElement(Icon, {
    icon: iconName
  })));
};
/**
 * Component Styles and Props
 * - Global styles
 * - Different props
 */


var Button = styled(ButtonComponent).withConfig({
  displayName: "Button",
  componentId: "f702ih-0"
})(["", ";", ";", ";", ";", ";", ";", ";", ""], css_buttonbase, function (p) {
  return p.iconName && css_buttonicons;
}, function (p) {
  return p.primary && !p.secondary && buttonStyle("primary");
}, function (p) {
  return p.secondary && !p.primary && buttonStyle("secondary");
}, function (p) {
  return p.rounded && !p.squared && css_buttonrounded;
}, function (p) {
  return p.squared && !p.rounded && css_buttonsquared;
}, function (p) {
  return p.circle && css_buttoncircle;
}, function (p) {
  return p.animations && css_buttonanimations;
});
Button.defaultProps = {
  children: "",
  iconName: "",
  iconPosition: "right",
  animations: false,
  theme: defaultTheme.base,
  onClick: function onClick() {
    return console.log("button pressed");
  },
  rounded: false,
  squared: false,
  primary: false,
  secondary: false
};
/**
 * PropTypes
 */

Button.propTypes = {
  children: PropTypes.string,
  iconName: PropTypes.string,
  iconPosition: PropTypes.oneOf(["left", "right"]),
  animations: PropTypes.bool,
  theme: PropTypes.object,
  onClick: PropTypes.func,
  rounded: PropTypes.bool,
  squared: PropTypes.bool,
  primary: PropTypes.bool,
  secondary: PropTypes.bool
};
export default Button;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvYnV0dG9uL0J1dHRvbi5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJzdHlsZWQiLCJQcm9wVHlwZXMiLCJCdG5MYWJlbCIsIkljb25XcmFwcGVyIiwiY3NzX2J1dHRvbmJhc2UiLCJjc3NfYnV0dG9uY2lyY2xlIiwiY3NzX2J1dHRvbmljb25zIiwiY3NzX2J1dHRvbnJvdW5kZWQiLCJjc3NfYnV0dG9uc3F1YXJlZCIsImNzc19idXR0b25hbmltYXRpb25zIiwiYnV0dG9uU3R5bGUiLCJkZWZhdWx0VGhlbWUiLCJJY29uIiwiQnV0dG9uQ29tcG9uZW50IiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJpY29uTmFtZSIsInNxdWFyZWQiLCJyb3VuZGVkIiwiY2lyY2xlIiwiaWNvblBvc2l0aW9uIiwiQnV0dG9uIiwicCIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJhbmltYXRpb25zIiwiZGVmYXVsdFByb3BzIiwidGhlbWUiLCJiYXNlIiwiY29uc29sZSIsImxvZyIsInByb3BUeXBlcyIsInN0cmluZyIsIm9uZU9mIiwiYm9vbCIsIm9iamVjdCIsImZ1bmMiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLG1CQUFuQjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFFQSxTQUNDQyxRQURELEVBRUNDLFdBRkQsRUFHQ0MsY0FIRCxFQUlDQyxnQkFKRCxFQUtDQyxlQUxELEVBTUNDLGlCQU5ELEVBT0NDLGlCQVBELEVBUUNDLG9CQVJELEVBU0NDLFdBVEQsUUFVTyxVQVZQO0FBWUEsU0FBU0MsWUFBVCxRQUE2QixjQUE3QjtBQUNBLFNBQVNDLElBQVQsUUFBcUIsU0FBckI7QUFFQTs7Ozs7Ozs7OztBQVVBOzs7Ozs7QUFLQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCO0FBQUEsTUFDdkJDLFNBRHVCLFFBQ3ZCQSxTQUR1QjtB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QUdsQlosRUFBQUEsWUFBWSxFQUFFckIsU0FBUyxDQUFDa0MsS0FBVixDQUFnQixDQUFDLE1BQUQsRUFBUyxPQUFULENBQWhCLENBSEk7QUFJbEJSLEVBQUFBLFVBQVUsRUFBRTFCLFNBQVMsQ0FBQ21DLElBSko7QUFLbEJQLEVBQUFBLEtBQUssRUFBRTVCLFNBQVMsQ0FBQ29DLE1BTEM7QUFNbEJyQixFQUFBQSxPQUFPLEVBQUVmLFNBQVMsQ0FBQ3FDLElBTkQ7QUFPbEJsQixFQUFBQSxPQUFPLEVBQUVuQixTQUFTLENBQUNtQyxJQVBEO0FBUWxCakIsRUFBQUEsT0FBTyxFQUFFbEIsU0FBUyxDQUFDbUMsSUFSRDtBQVNsQlgsRUFBQUEsT0FBTyxFQUFFeEIsU0FBUyxDQUFDbUMsSUFURDtBQVVsQlYsRUFBQUEsU0FBUyxFQUFFekIsU0FBUyxDQUFDbUM7QUFWSCxDQUFuQjtBQWFBLGVBQWViLE1BQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5pbXBvcnQge1xuXHRCdG5MYWJlbCxcblx0SWNvbldyYXBwZXIsXG5cdGNzc19idXR0b25iYXNlLFxuXHRjc3NfYnV0dG9uY2lyY2xlLFxuXHRjc3NfYnV0dG9uaWNvbnMsXG5cdGNzc19idXR0b25yb3VuZGVkLFxuXHRjc3NfYnV0dG9uc3F1YXJlZCxcblx0Y3NzX2J1dHRvbmFuaW1hdGlvbnMsXG5cdGJ1dHRvblN0eWxlXG59IGZyb20gXCIuL3N0eWxlc1wiO1xuXG5pbXBvcnQgeyBkZWZhdWx0VGhlbWUgfSBmcm9tIFwiLi4vdWkvdGhlbWVzXCI7XG5pbXBvcnQgeyBJY29uIH0gZnJvbSBcIi4uL2ljb25cIjtcblxuLyoqXG4gKiBAdGl0bGUgQnV0dG9uIGNvbXBvbmVudFxuICpcbiAqIEBzdW1tYXJ5IENvbXBvbmVudHMvQnV0dG9uIGlzIGEgc2ltcGxlIGJ1dHRvbiBjb21wb25lbnQgdXNpbmcgU3R5bGVkIENvbXBvbmVudHMgYW5kIG1hZGUgZm9yIHJldXNhYmlsaXR5XG4gKiBAc2VlIFN0eWxlZENvbXBvbmVudHNcbiAqXG4gKiBAdmVyc2lvbiAxLjAuMFxuICogQGF1dGhvciBbU3VydmVpbGxhbmNlT25lXVtNYXJrdXMgSHVkb2JuaWtdKGh0dHBzOi8vZ2l0aHViLmNvbS9TdXJ2ZWlsbGFuY2VPbmUpXG4gKi9cblxuLyoqXG5cdCogQ29tcG9uZW50IERlY2xhcmF0aW9uXG5cdCogLSBEZWZhdWx0IFByb3BzXG5cdCogLSB0aGVtZXNcbiAqL1xuY29uc3QgQnV0dG9uQ29tcG9uZW50ID0gKHtcblx0Y2xhc3NOYW1lLCBjaGlsZHJlbiwgb25DbGljaywgZGlzYWJsZWQsIGljb25OYW1lLCBzcXVhcmVkLCByb3VuZGVkLCBjaXJjbGUsIGljb25Qb3NpdGlvbixcbn0pID0+IChcblx0PGJ1dHRvbiBjbGFzc05hbWU9e2NsYXNzTmFtZX0gb25DbGljaz17b25DbGlja30gZGlzYWJsZWQ9e2Rpc2FibGVkfT5cblx0XHR7ICghc3F1YXJlZCAmJiAhY2lyY2xlKSAmJiA8QnRuTGFiZWw+XG5cdFx0XHR7Y2hpbGRyZW59XG5cdFx0PC9CdG5MYWJlbD4gfVxuXG5cdFx0eyBpY29uTmFtZVxuXHRcdCYmIDxJY29uV3JhcHBlclxuXHRcdFx0aWNvblBvc2l0aW9uPXtpY29uUG9zaXRpb259XG5cdFx0XHRzcXVhcmVkPXtzcXVhcmVkfVxuXHRcdFx0Y2lyY2xlPXtjaXJjbGV9XG5cdFx0XHRyb3VuZGVkPXtyb3VuZGVkfT5cblx0XHRcdDxJY29uIGljb249e2ljb25OYW1lfS8+XG5cdFx0PC9JY29uV3JhcHBlcj59XG5cdDwvYnV0dG9uPlxuKTtcblxuLyoqXG4gKiBDb21wb25lbnQgU3R5bGVzIGFuZCBQcm9wc1xuICogLSBHbG9iYWwgc3R5bGVzXG4gKiAtIERpZmZlcmVudCBwcm9wc1xuICovXG5jb25zdCBCdXR0b24gPSBzdHlsZWQoQnV0dG9uQ29tcG9uZW50KWBcblx0LyoqIE1haW4gVGhlbWUgKi9cblx0JHtjc3NfYnV0dG9uYmFzZX07XG5cblx0LyoqIEljb25zICovXG5cdCR7cCA9PiBwLmljb25OYW1lICYmIGNzc19idXR0b25pY29uc307XG5cblx0LyoqIENvbG9yIFZhcmlhbnRzICovXG5cdCR7cCA9PiBwLnByaW1hcnkgJiYgIXAuc2Vjb25kYXJ5ICYmIGJ1dHRvblN0eWxlKFwicHJpbWFyeVwiKX07XG5cdCR7cCA9PiBwLnNlY29uZGFyeSAmJiAhcC5wcmltYXJ5ICYmIGJ1dHRvblN0eWxlKFwic2Vjb25kYXJ5XCIpfTtcblxuXHQvKiogQnV0dG9uIFR5cGVzICovXG5cdCR7cCA9PiAocC5yb3VuZGVkICYmICFwLnNxdWFyZWQpICYmIGNzc19idXR0b25yb3VuZGVkfTtcblx0JHtwID0+IChwLnNxdWFyZWQgJiYgIXAucm91bmRlZCkgJiYgY3NzX2J1dHRvbnNxdWFyZWR9O1xuXHQke3AgPT4gcC5jaXJjbGUgJiYgY3NzX2J1dHRvbmNpcmNsZX07XG5cblxuXHQvKiogQnV0dG9uIEFuaW1hdGlvbnMgKi9cblx0JHtwID0+IHAuYW5pbWF0aW9ucyAmJiBjc3NfYnV0dG9uYW5pbWF0aW9uc31cbmA7XG5cbkJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG5cdGNoaWxkcmVuOiBcIlwiLFxuXHRpY29uTmFtZTogXCJcIixcblx0aWNvblBvc2l0aW9uOiBcInJpZ2h0XCIsXG5cdGFuaW1hdGlvbnM6IGZhbHNlLFxuXHR0aGVtZTogZGVmYXVsdFRoZW1lLmJhc2UsXG5cdG9uQ2xpY2s6ICgoKSA9PiBjb25zb2xlLmxvZyhcImJ1dHRvbiBwcmVzc2VkXCIpKSxcblx0cm91bmRlZDogZmFsc2UsXG5cdHNxdWFyZWQ6IGZhbHNlLFxuXHRwcmltYXJ5OiBmYWxzZSxcblx0c2Vjb25kYXJ5OiBmYWxzZSxcbn07XG5cbi8qKlxuICogUHJvcFR5cGVzXG4gKi9cblxuQnV0dG9uLnByb3BUeXBlcyA9IHtcblx0Y2hpbGRyZW46IFByb3BUeXBlcy5zdHJpbmcsXG5cdGljb25OYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXHRpY29uUG9zaXRpb246IFByb3BUeXBlcy5vbmVPZihbXCJsZWZ0XCIsIFwicmlnaHRcIl0pLFxuXHRhbmltYXRpb25zOiBQcm9wVHlwZXMuYm9vbCxcblx0dGhlbWU6IFByb3BUeXBlcy5vYmplY3QsXG5cdG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuXHRyb3VuZGVkOiBQcm9wVHlwZXMuYm9vbCxcblx0c3F1YXJlZDogUHJvcFR5cGVzLmJvb2wsXG5cdHByaW1hcnk6IFByb3BUeXBlcy5ib29sLFxuXHRzZWNvbmRhcnk6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uO1xuIl19