import React from "react";
import { BtnLabel, IconWrapper, ButtonContainer } from "./styles";
import { Icon } from "../icon";
/**
 * @title Button component
 *
 * @summary Components/Button is a simple button component using Styled Components and made for reusability
 * @see StyledComponents
 *
 * @version 2.0.0
 * @author [SurveillanceOne][Markus Hudobnik](https://github.com/SurveillanceOne)
 */

/**
	* Component Declaration
	* - Default Props
	* - themes
 */

var Button = function Button(_ref) {
  var children = _ref.children,
      onClick = _ref.onClick,
      disabled = _ref.disabled,
      iconName = _ref.iconName,
      squared = _ref.squared,
      rounded = _ref.rounded,
      circle = _ref.circle,
      iconPosition = _ref.iconPosition,
      primary = _ref.primary,
      secondary = _ref.secondary,
      _ref$iconBg = _ref.iconBg,
      iconBg = _ref$iconBg === void 0 ? true : _ref$iconBg;
  return React.createElement(ButtonContainer, {
    onClick: onClick,
    disabled: disabled,
    iconName: iconName,
    primary: primary,
    secondary: secondary,
    rounded: rounded,
    squared: squared,
    circle: circle
  }, !squared && !circle && React.createElement(BtnLabel, null, children), iconName && React.createElement(IconWrapper, {
    bg: iconBg,
    iconPosition: iconPosition,
    squared: squared,
    circle: circle,
    rounded: rounded
  }, React.createElement(Icon, {
    icon: iconName
  })));
};
/**
 * PropTypes
 */


export default Button;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvYnV0dG9uL0J1dHRvbi5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJCdG5MYWJlbCIsIkljb25XcmFwcGVyIiwiQnV0dG9uQ29udGFpbmVyIiwiSWNvbiIsIkJ1dHRvbiIsImNoaWxkcmVuIiwib25DbGljayIsImRpc2FibGVkIiwiaWNvbk5hbWUiLCJzcXVhcmVkIiwicm91bmRlZCIsImNpcmNsZSIsImljb25Qb3NpdGlvbiIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJpY29uQmciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFHQSxTQUNDQyxRQURELEVBRUNDLFdBRkQsRUFHQ0MsZUFIRCxRQUlPLFVBSlA7QUFNQSxTQUFTQyxJQUFULFFBQXFCLFNBQXJCO0FBRUE7Ozs7Ozs7Ozs7QUFVQTs7Ozs7O0FBS0EsSUFBTUMsTUFBTSxHQUFHLFNBQVRBLE1BQVM7QUFBQSxNQUNkQyxRQURjLFFBQ2RBLFFBRGM7QUFBQSxNQUNKQyxPQURJLFFBQ0pBLE9BREk7QUFBQSxNQUNLQyxRQURMLFFBQ0tBLFFBREw7QUFBQSxNQUNlQyxRQURmLFFBQ2VBLFFBRGY7QUFBQSxNQUN5QkMsT0FEekIsUUFDeUJBLE9BRHpCO0FBQUEsTUFDa0NDLE9BRGxDLFFBQ2tDQSxPQURsQztBQUFBLE1BQzJDQyxNQUQzQyxRQUMyQ0EsTUFEM0M7QUFBQSxNQUNtREMsWUFEbkQsUUFDbURBLFlBRG5EO0FBQUEsTUFDaUVDLE9BRGpFLFFBQ2lFQSxPQURqRTtBQUFBLE1BQzBFQyxTQUQxRSxRQUMwRUEsU0FEMUU7QUFBQSx5QkFDcUZDLE1BRHJGO0FBQUEsTUFDcUZBLE1BRHJGLDRCQUM4RixJQUQ5RjtBQUFBLFNBR2Qsb0JBQUMsZUFBRDtBQUNDLElBQUEsT0FBTyxFQUFFVCxPQURWO0FBRUMsSUFBQSxRQUFRLEVBQUVDLFFBRlg7QUFHQyxJQUFBLFFBQVEsRUFBRUMsUUFIWDtBQUlDLElBQUEsT0FBTyxFQUFFSyxPQUpWO0FBS0MsSUFBQSxTQUFTLEVBQUVDLFNBTFo7QUFNQyxJQUFBLE9BQU8sRUFBRUosT0FOVjtBQU9DLElBQUEsT0FBTyxFQUFFRCxPQVBWO0FBUUMsSUFBQSxNQUFNLEVBQUVFO0FBUlQsS0FTRyxDQUFDRixPQUFELElBQVksQ0FBQ0UsTUFBZCxJQUNBLG9CQUFDLFFBQUQsUUFDRU4sUUFERixDQVZGLEVBZUVHLFFBQVEsSUFDUixvQkFBQyxXQUFEO0FBQ0MsSUFBQSxFQUFFLEVBQUVPLE1BREw7QUFFQyxJQUFBLFlBQVksRUFBRUgsWUFGZjtBQUdDLElBQUEsT0FBTyxFQUFFSCxPQUhWO0FBSUMsSUFBQSxNQUFNLEVBQUVFLE1BSlQ7QUFLQyxJQUFBLE9BQU8sRUFBRUQ7QUFMVixLQU1DLG9CQUFDLElBQUQ7QUFBTSxJQUFBLElBQUksRUFBRUY7QUFBWixJQU5ELENBaEJGLENBSGM7QUFBQSxDQUFmO0FBK0JBOzs7OztBQWlCQSxlQUFlSixNQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuXG5pbXBvcnQge1xuXHRCdG5MYWJlbCxcblx0SWNvbldyYXBwZXIsXG5cdEJ1dHRvbkNvbnRhaW5lclxufSBmcm9tIFwiLi9zdHlsZXNcIjtcblxuaW1wb3J0IHsgSWNvbiB9IGZyb20gXCIuLi9pY29uXCI7XG5cbi8qKlxuICogQHRpdGxlIEJ1dHRvbiBjb21wb25lbnRcbiAqXG4gKiBAc3VtbWFyeSBDb21wb25lbnRzL0J1dHRvbiBpcyBhIHNpbXBsZSBidXR0b24gY29tcG9uZW50IHVzaW5nIFN0eWxlZCBDb21wb25lbnRzIGFuZCBtYWRlIGZvciByZXVzYWJpbGl0eVxuICogQHNlZSBTdHlsZWRDb21wb25lbnRzXG4gKlxuICogQHZlcnNpb24gMi4wLjBcbiAqIEBhdXRob3IgW1N1cnZlaWxsYW5jZU9uZV1bTWFya3VzIEh1ZG9ibmlrXShodHRwczovL2dpdGh1Yi5jb20vU3VydmVpbGxhbmNlT25lKVxuICovXG5cbi8qKlxuXHQqIENvbXBvbmVudCBEZWNsYXJhdGlvblxuXHQqIC0gRGVmYXVsdCBQcm9wc1xuXHQqIC0gdGhlbWVzXG4gKi9cbmNvbnN0IEJ1dHRvbiA9ICh7XG5cdGNoaWxkcmVuLCBvbkNsaWNrLCBkaXNhYmxlZCwgaWNvbk5hbWUsIHNxdWFyZWQsIHJvdW5kZWQsIGNpcmNsZSwgaWNvblBvc2l0aW9uLCBwcmltYXJ5LCBzZWNvbmRhcnksIGljb25CZyA9IHRydWVcbn0pID0+IChcblx0PEJ1dHRvbkNvbnRhaW5lclxuXHRcdG9uQ2xpY2s9e29uQ2xpY2t9XG5cdFx0ZGlzYWJsZWQ9e2Rpc2FibGVkfVxuXHRcdGljb25OYW1lPXtpY29uTmFtZX1cblx0XHRwcmltYXJ5PXtwcmltYXJ5fVxuXHRcdHNlY29uZGFyeT17c2Vjb25kYXJ5fVxuXHRcdHJvdW5kZWQ9e3JvdW5kZWR9XG5cdFx0c3F1YXJlZD17c3F1YXJlZH1cblx0XHRjaXJjbGU9e2NpcmNsZX0+XG5cdFx0eyghc3F1YXJlZCAmJiAhY2lyY2xlKSAmJlxuXHRcdFx0PEJ0bkxhYmVsPlxuXHRcdFx0XHR7Y2hpbGRyZW59XG5cdFx0XHQ8L0J0bkxhYmVsPlxuXHRcdH1cblxuXHRcdHtpY29uTmFtZSAmJlxuXHRcdFx0PEljb25XcmFwcGVyXG5cdFx0XHRcdGJnPXtpY29uQmd9XG5cdFx0XHRcdGljb25Qb3NpdGlvbj17aWNvblBvc2l0aW9ufVxuXHRcdFx0XHRzcXVhcmVkPXtzcXVhcmVkfVxuXHRcdFx0XHRjaXJjbGU9e2NpcmNsZX1cblx0XHRcdFx0cm91bmRlZD17cm91bmRlZH0+XG5cdFx0XHRcdDxJY29uIGljb249e2ljb25OYW1lfS8+XG5cdFx0XHQ8L0ljb25XcmFwcGVyPlxuXHRcdH1cblx0PC9CdXR0b25Db250YWluZXI+XG4pO1xuXG4vKipcbiAqIFByb3BUeXBlc1xuICovXG5CdXR0b24ucHJvcFR5cGVzID0ge1xuXHRjaGlsZHJlbjogUHJvcFR5cGVzLnN0cmluZyxcblx0aWNvbk5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cdGljb25CZzogUHJvcFR5cGVzLmJvb2wsXG5cdGljb25Qb3NpdGlvbjogUHJvcFR5cGVzLm9uZU9mKFtcImxlZnRcIiwgXCJyaWdodFwiXSksXG5cdGFuaW1hdGlvbnM6IFByb3BUeXBlcy5ib29sLFxuXHR0aGVtZTogUHJvcFR5cGVzLm9iamVjdCxcblx0b25DbGljazogUHJvcFR5cGVzLmZ1bmMsXG5cdHJvdW5kZWQ6IFByb3BUeXBlcy5ib29sLFxuXHRzcXVhcmVkOiBQcm9wVHlwZXMuYm9vbCxcblx0cHJpbWFyeTogUHJvcFR5cGVzLmJvb2wsXG5cdHNlY29uZGFyeTogUHJvcFR5cGVzLmJvb2wsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBCdXR0b247XG4iXX0=