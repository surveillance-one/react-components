import React from "react";
import styled from "styled-components";
import PropTypes from "prop-types";
import { BtnLabel, IconWrapper, css_buttonbase, css_buttoncircle, css_buttonicons, css_buttonrounded, css_buttonsquared, css_buttonanimations, buttonStyle } from "./styles";
import { defaultTheme } from "../ui/themes";
import { Icon } from "../icon";
/**
 * @title Button component
 *
 * @summary Components/Button is a simple button component using Styled Components and made for reusability
 * @see StyledComponents
 *
 * @version 1.0.0
 * @author [SurveillanceOne][Markus Hudobnik](https://github.com/SurveillanceOne)
 */

/**
	* Component Declaration
	* - Default Props
	* - themes
 */

var ButtonComponent = function ButtonComponent(_ref) {
  var className = _ref.className,
      children = _ref.children,
      onClick = _ref.onClick,
      disabled = _ref.disabled,
      iconName = _ref.iconName,
      squared = _ref.squared,
      rounded = _ref.rounded,
      circle = _ref.circle,
      iconPosition = _ref.iconPosition;
  return React.createElement("button", {
    className: className,
    onClick: onClick,
    disabled: disabled
  }, !squared && !circle && React.createElement(BtnLabel, null, children), iconName && React.createElement(IconWrapper, {
    iconPosition: iconPosition,
    squared: squared,
    circle: circle,
    rounded: rounded
  }, React.createElement(Icon, {
    icon: iconName
  })));
};
/**
 * Component Styles and Props
 * - Global styles
 * - Different props
 */


var Button = styled(ButtonComponent).withConfig({
  displayName: "Button",
  componentId: "sc-1sp3d36-0"
})(["", ";", ";", ";", ";", ";", ";", ";", ""], css_buttonbase, function (p) {
  return p.iconName && css_buttonicons;
}, function (p) {
  return p.primary && !p.secondary && buttonStyle("primary");
}, function (p) {
  return p.secondary && !p.primary && buttonStyle("secondary");
}, function (p) {
  return p.rounded && !p.squared && css_buttonrounded;
}, function (p) {
  return p.squared && !p.rounded && css_buttonsquared;
}, function (p) {
  return p.circle && css_buttoncircle;
}, function (p) {
  return p.animations && css_buttonanimations;
});
Button.defaultProps = {
  children: "",
  iconName: "",
  iconPosition: "right",
  theme: defaultTheme.base,
  onClick: function onClick() {
    return console.log("button pressed");
  },
  rounded: false,
  squared: false,
  primary: false,
  secondary: false
};
/**
 * PropTypes
 */

Button.propTypes = {
  children: PropTypes.string,
  iconName: PropTypes.string,
  iconPosition: PropTypes.oneOf(["left", "right"]),
  theme: PropTypes.object,
  onClick: PropTypes.func,
  rounded: PropTypes.bool,
  squared: PropTypes.bool,
  primary: PropTypes.bool,
  secondary: PropTypes.bool
};
export default Button;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvYnV0dG9uL0J1dHRvbi5qc3giXSwibmFtZXMiOlsiUmVhY3QiLCJzdHlsZWQiLCJQcm9wVHlwZXMiLCJCdG5MYWJlbCIsIkljb25XcmFwcGVyIiwiY3NzX2J1dHRvbmJhc2UiLCJjc3NfYnV0dG9uY2lyY2xlIiwiY3NzX2J1dHRvbmljb25zIiwiY3NzX2J1dHRvbnJvdW5kZWQiLCJjc3NfYnV0dG9uc3F1YXJlZCIsImNzc19idXR0b25hbmltYXRpb25zIiwiYnV0dG9uU3R5bGUiLCJkZWZhdWx0VGhlbWUiLCJJY29uIiwiQnV0dG9uQ29tcG9uZW50IiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJvbkNsaWNrIiwiZGlzYWJsZWQiLCJpY29uTmFtZSIsInNxdWFyZWQiLCJyb3VuZGVkIiwiY2lyY2xlIiwiaWNvblBvc2l0aW9uIiwiQnV0dG9uIiwicCIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJhbmltYXRpb25zIiwiZGVmYXVsdFByb3BzIiwidGhlbWUiLCJiYXNlIiwiY29uc29sZSIsImxvZyIsInByb3BUeXBlcyIsInN0cmluZyIsIm9uZU9mIiwib2JqZWN0IiwiZnVuYyIsImJvb2wiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxNQUFQLE1BQW1CLG1CQUFuQjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFFQSxTQUNDQyxRQURELEVBRUNDLFdBRkQsRUFHQ0MsY0FIRCxFQUlDQyxnQkFKRCxFQUtDQyxlQUxELEVBTUNDLGlCQU5ELEVBT0NDLGlCQVBELEVBUUNDLG9CQVJELEVBU0NDLFdBVEQsUUFVTyxVQVZQO0FBWUEsU0FBU0MsWUFBVCxRQUE2QixjQUE3QjtBQUNBLFNBQVNDLElBQVQsUUFBcUIsU0FBckI7QUFFQTs7Ozs7Ozs7OztBQVVBOzs7Ozs7QUFLQSxJQUFNQyxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCO0FBQUEsTUFDdkJDLFNBRHVCLFFBQ3ZCQSxTQUR1QjtB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LENBQUNrQyxLQUFWLENBQWdCLENBQUMsTUFBRCxFQUFTLE9BQVQsQ0FBaEIsQ0FISTtBQUlsQk4sRUFBQUEsS0FBSyxFQUFFNUIsU0FBUyxDQUFDbUMsTUFKQztBQUtsQnBCLEVBQUFBLE9BQU8sRUFBRWYsU0FBUyxDQUFDb0MsSUFMRDtBQU1sQmpCLEVBQUFBLE9BQU8sRUFBRW5CLFNBQVMsQ0FBQ3FDLElBTkQ7QUFPbEJuQixFQUFBQSxPQUFPLEVBQUVsQixTQUFTLENBQUNxQyxJQVBEO0FBUWxCYixFQUFBQSxPQUFPLEVBQUV4QixTQUFTLENBQUNxQyxJQVJEO0FBU2xCWixFQUFBQSxTQUFTLEVBQUV6QixTQUFTLENBQUNxQztBQVRILENBQW5CO0FBWUEsZUFBZWYsTUFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSBcInN0eWxlZC1jb21wb25lbnRzXCI7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gXCJwcm9wLXR5cGVzXCI7XG5cbmltcG9ydCB7XG5cdEJ0bkxhYmVsLFxuXHRJY29uV3JhcHBlcixcblx0Y3NzX2J1dHRvbmJhc2UsXG5cdGNzc19idXR0b25jaXJjbGUsXG5cdGNzc19idXR0b25pY29ucyxcblx0Y3NzX2J1dHRvbnJvdW5kZWQsXG5cdGNzc19idXR0b25zcXVhcmVkLFxuXHRjc3NfYnV0dG9uYW5pbWF0aW9ucyxcblx0YnV0dG9uU3R5bGVcbn0gZnJvbSBcIi4vc3R5bGVzXCI7XG5cbmltcG9ydCB7IGRlZmF1bHRUaGVtZSB9IGZyb20gXCIuLi91aS90aGVtZXNcIjtcbmltcG9ydCB7IEljb24gfSBmcm9tIFwiLi4vaWNvblwiO1xuXG4vKipcbiAqIEB0aXRsZSBCdXR0b24gY29tcG9uZW50XG4gKlxuICogQHN1bW1hcnkgQ29tcG9uZW50cy9CdXR0b24gaXMgYSBzaW1wbGUgYnV0dG9uIGNvbXBvbmVudCB1c2luZyBTdHlsZWQgQ29tcG9uZW50cyBhbmQgbWFkZSBmb3IgcmV1c2FiaWxpdHlcbiAqIEBzZWUgU3R5bGVkQ29tcG9uZW50c1xuICpcbiAqIEB2ZXJzaW9uIDEuMC4wXG4gKiBAYXV0aG9yIFtTdXJ2ZWlsbGFuY2VPbmVdW01hcmt1cyBIdWRvYm5pa10oaHR0cHM6Ly9naXRodWIuY29tL1N1cnZlaWxsYW5jZU9uZSlcbiAqL1xuXG4vKipcblx0KiBDb21wb25lbnQgRGVjbGFyYXRpb25cblx0KiAtIERlZmF1bHQgUHJvcHNcblx0KiAtIHRoZW1lc1xuICovXG5jb25zdCBCdXR0b25Db21wb25lbnQgPSAoe1xuXHRjbGFzc05hbWUsIGNoaWxkcmVuLCBvbkNsaWNrLCBkaXNhYmxlZCwgaWNvbk5hbWUsIHNxdWFyZWQsIHJvdW5kZWQsIGNpcmNsZSwgaWNvblBvc2l0aW9uLFxufSkgPT4gKFxuXHQ8YnV0dG9uIGNsYXNzTmFtZT17Y2xhc3NOYW1lfSBvbkNsaWNrPXtvbkNsaWNrfSBkaXNhYmxlZD17ZGlzYWJsZWR9PlxuXHRcdHsgKCFzcXVhcmVkICYmICFjaXJjbGUpICYmIDxCdG5MYWJlbD5cblx0XHRcdHtjaGlsZHJlbn1cblx0XHQ8L0J0bkxhYmVsPiB9XG5cblx0XHR7IGljb25OYW1lXG5cdFx0JiYgPEljb25XcmFwcGVyXG5cdFx0XHRpY29uUG9zaXRpb249e2ljb25Qb3NpdGlvbn1cblx0XHRcdHNxdWFyZWQ9e3NxdWFyZWR9XG5cdFx0XHRjaXJjbGU9e2NpcmNsZX1cblx0XHRcdHJvdW5kZWQ9e3JvdW5kZWR9PlxuXHRcdFx0PEljb24gaWNvbj17aWNvbk5hbWV9Lz5cblx0XHQ8L0ljb25XcmFwcGVyPn1cblx0PC9idXR0b24+XG4pO1xuXG4vKipcbiAqIENvbXBvbmVudCBTdHlsZXMgYW5kIFByb3BzXG4gKiAtIEdsb2JhbCBzdHlsZXNcbiAqIC0gRGlmZmVyZW50IHByb3BzXG4gKi9cbmNvbnN0IEJ1dHRvbiA9IHN0eWxlZChCdXR0b25Db21wb25lbnQpYFxuXHQvKiogTWFpbiBUaGVtZSAqL1xuXHQke2Nzc19idXR0b25iYXNlfTtcblxuXHQvKiogSWNvbnMgKi9cblx0JHtwID0+IHAuaWNvbk5hbWUgJiYgY3NzX2J1dHRvbmljb25zfTtcblxuXHQvKiogQ29sb3IgVmFyaWFudHMgKi9cblx0JHtwID0+IHAucHJpbWFyeSAmJiAhcC5zZWNvbmRhcnkgJiYgYnV0dG9uU3R5bGUoXCJwcmltYXJ5XCIpfTtcblx0JHtwID0+IHAuc2Vjb25kYXJ5ICYmICFwLnByaW1hcnkgJiYgYnV0dG9uU3R5bGUoXCJzZWNvbmRhcnlcIil9O1xuXG5cdC8qKiBCdXR0b24gVHlwZXMgKi9cblx0JHtwID0+IChwLnJvdW5kZWQgJiYgIXAuc3F1YXJlZCkgJiYgY3NzX2J1dHRvbnJvdW5kZWR9O1xuXHQke3AgPT4gKHAuc3F1YXJlZCAmJiAhcC5yb3VuZGVkKSAmJiBjc3NfYnV0dG9uc3F1YXJlZH07XG5cdCR7cCA9PiBwLmNpcmNsZSAmJiBjc3NfYnV0dG9uY2lyY2xlfTtcblxuXG5cdC8qKiBCdXR0b24gQW5pbWF0aW9ucyAqL1xuXHQke3AgPT4gcC5hbmltYXRpb25zICYmIGNzc19idXR0b25hbmltYXRpb25zfVxuYDtcblxuQnV0dG9uLmRlZmF1bHRQcm9wcyA9IHtcblx0Y2hpbGRyZW46IFwiXCIsXG5cdGljb25OYW1lOiBcIlwiLFxuXHRpY29uUG9zaXRpb246IFwicmlnaHRcIixcblx0dGhlbWU6IGRlZmF1bHRUaGVtZS5iYXNlLFxuXHRvbkNsaWNrOiAoKCkgPT4gY29uc29sZS5sb2coXCJidXR0b24gcHJlc3NlZFwiKSksXG5cdHJvdW5kZWQ6IGZhbHNlLFxuXHRzcXVhcmVkOiBmYWxzZSxcblx0cHJpbWFyeTogZmFsc2UsXG5cdHNlY29uZGFyeTogZmFsc2UsXG59O1xuXG4vKipcbiAqIFByb3BUeXBlc1xuICovXG5cbkJ1dHRvbi5wcm9wVHlwZXMgPSB7XG5cdGNoaWxkcmVuOiBQcm9wVHlwZXMuc3RyaW5nLFxuXHRpY29uTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblx0aWNvblBvc2l0aW9uOiBQcm9wVHlwZXMub25lT2YoW1wibGVmdFwiLCBcInJpZ2h0XCJdKSxcblx0dGhlbWU6IFByb3BUeXBlcy5vYmplY3QsXG5cdG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jLFxuXHRyb3VuZGVkOiBQcm9wVHlwZXMuYm9vbCxcblx0c3F1YXJlZDogUHJvcFR5cGVzLmJvb2wsXG5cdHByaW1hcnk6IFByb3BUeXBlcy5ib29sLFxuXHRzZWNvbmRhcnk6IFByb3BUeXBlcy5ib29sLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQnV0dG9uO1xuIl19